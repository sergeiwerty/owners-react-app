[{"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/index.js":"1","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/reportWebVitals.js":"2","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/App.js":"3","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Experiments.jsx":"4","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Cloud.jsx":"5","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Security.jsx":"6","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Sketch.jsx":"7","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Colors.jsx":"8","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Ownership.jsx":"9","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/AB_test.jsx":"10","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Error.jsx":"11","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/Sidebar/Sidebar.jsx":"12","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Overview/Overview.jsx":"13","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/ownersData.js":"14","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Overview/NewOwners.jsx":"15","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/Layout.jsx":"16","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/ModalForm.jsx":"17","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/context.jsx":"18","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/Sidebar/sidebarData.js":"19","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Overview/utils.jsx":"20"},{"size":583,"mtime":1615698948002,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1613649804423,"results":"23","hashOfConfig":"22"},{"size":2259,"mtime":1615747929486,"results":"24","hashOfConfig":"22"},{"size":186,"mtime":1613652819934,"results":"25","hashOfConfig":"22"},{"size":168,"mtime":1613652823862,"results":"26","hashOfConfig":"22"},{"size":177,"mtime":1613652815806,"results":"27","hashOfConfig":"22"},{"size":171,"mtime":1613652813466,"results":"28","hashOfConfig":"22"},{"size":171,"mtime":1613652822206,"results":"29","hashOfConfig":"22"},{"size":169,"mtime":1613652818274,"results":"30","hashOfConfig":"22"},{"size":175,"mtime":1613652797650,"results":"31","hashOfConfig":"22"},{"size":222,"mtime":1613649804415,"results":"32","hashOfConfig":"22"},{"size":1970,"mtime":1615788688726,"results":"33","hashOfConfig":"22"},{"size":3989,"mtime":1615705450318,"results":"34","hashOfConfig":"22"},{"size":5903,"mtime":1615546600314,"results":"35","hashOfConfig":"22"},{"size":910,"mtime":1615273508018,"results":"36","hashOfConfig":"22"},{"size":275,"mtime":1615699854228,"results":"37","hashOfConfig":"22"},{"size":6831,"mtime":1615623288786,"results":"38","hashOfConfig":"22"},{"size":2264,"mtime":1615553884010,"results":"39","hashOfConfig":"22"},{"size":7190,"mtime":1615641825117,"results":"40","hashOfConfig":"22"},{"size":321,"mtime":1615297280655,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"qw65u4",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/index.js",[],["86","87"],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/reportWebVitals.js",[],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/App.js",["88"],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Experiments.jsx",[],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Cloud.jsx",[],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Security.jsx",[],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Sketch.jsx",[],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Colors.jsx",[],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Ownership.jsx",[],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/AB_test.jsx",[],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Error.jsx",[],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/Sidebar/Sidebar.jsx",["89"],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Overview/Overview.jsx",["90","91","92","93"],"import React, { useState, useEffect } from 'react'\r\nimport { Modal } from '../../ModalForm'\r\n// import NewOwners from './NewOwners'\r\nimport { paginate } from './utils'\r\n// import styles from './Overview.module.css'\r\nimport '../../bootstrap.min.css'\r\nimport './overview.css'\r\n\r\nimport arrow_btn from './images/arrow_btn.svg'\r\n//\r\nimport { useGlobalContext } from '../../context'\r\n//\r\n\r\nconst Overview = () => {\r\n  const {\r\n    openModal,\r\n    listOfOwners,\r\n    allOwners,\r\n    mergeOwners,\r\n    handlePageAfterAdd,\r\n  } = useGlobalContext()\r\n\r\n  const [modalShow, setModalShow] = useState(false)\r\n\r\n  useEffect(() => {\r\n    mergeOwners(allOwners, listOfOwners)\r\n    handlePageAfterAdd()\r\n    localStorage.setItem('listOfOwners', JSON.stringify(listOfOwners))\r\n  }, [listOfOwners])\r\n  return (\r\n    <>\r\n      <div className='owners_heading'>\r\n        <h1>Overview</h1>\r\n        {!modalShow && (\r\n          <div className='button_wrapper'>\r\n            <button\r\n              className='some_btn'\r\n              type='submit'\r\n              title='functionality is not yet available'\r\n            >\r\n              ...\r\n            </button>\r\n            <button className='add_btn' onClick={openModal}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <p className='lines_heading'>\r\n        <span>Owner</span>\r\n        <span>End date</span>\r\n        <span>Profits</span>\r\n        <span>Losses</span>\r\n        <span>Phone</span>\r\n      </p>\r\n      <List />\r\n      {/* <NewOwners /> */}\r\n\r\n      <Modal />\r\n    </>\r\n  )\r\n}\r\n\r\nconst List = () => {\r\n  const {\r\n    page,\r\n    handlePage,\r\n    owners,\r\n    allOwners,\r\n    ownersTrigger,\r\n  } = useGlobalContext()\r\n\r\n  return (\r\n    <>\r\n      {paginate(ownersTrigger ? allOwners : owners)[page].map((owner) => {\r\n        const { id, fullName, endDate, profits, losses, phone } = owner\r\n        return (\r\n          <>\r\n            <article key={id} className='owner'>\r\n              <div className='owner_line'>\r\n                <h3>{fullName}</h3>\r\n                <span>{endDate}</span>\r\n                <span className='profits'>{profits}</span>\r\n                <span className='losses'>{losses}</span>\r\n                <span>{phone}</span>\r\n              </div>\r\n            </article>\r\n          </>\r\n        )\r\n      })}\r\n      <Pagination />\r\n    </>\r\n  )\r\n}\r\n\r\nconst Pagination = () => {\r\n  const { currentPage, page, handlePage, allOwners } = useGlobalContext()\r\n\r\n  const nextPage = () => {\r\n    handlePage((oldPage) => {\r\n      let nextPage = oldPage + 1\r\n      if (nextPage > paginate(allOwners).length - 1) {\r\n        nextPage = 0\r\n      }\r\n      console.log(nextPage)\r\n      return nextPage\r\n    })\r\n  }\r\n\r\n  const prevPage = () => {\r\n    handlePage((oldPage) => {\r\n      let prevPage = oldPage - 1\r\n      if (prevPage < 0) {\r\n        prevPage = paginate(allOwners).length - 1\r\n      }\r\n      console.log(prevPage)\r\n      return prevPage\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='pagination-container'>\r\n        <button className='prev-btn' onClick={prevPage}>\r\n          <img src={arrow_btn} alt='previous-btn' />\r\n          {handlePage}\r\n        </button>\r\n        {paginate(allOwners).map((item, index) => {\r\n          if (index === 0) {\r\n            return (\r\n              <button\r\n                key={index}\r\n                onClick={() => handlePage(index)}\r\n                className='page-num'\r\n              >\r\n                {page + 1}\r\n              </button>\r\n            )\r\n          } else {\r\n            return (\r\n              <button\r\n                key={index}\r\n                onClick={() => handlePage(index)}\r\n                className='page-num'\r\n              >\r\n                {index + 1}\r\n              </button>\r\n            )\r\n          }\r\n        })}\r\n        <button className='next-btn' onClick={nextPage}>\r\n          <img src={arrow_btn} alt='next-btn' />\r\n        </button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Overview\r\n","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/ownersData.js",[],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Overview/NewOwners.jsx",[],["94","95"],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/Layout.jsx",[],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/ModalForm.jsx",["96","97","98"],"import React, { useState } from 'react'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\n// import Modal from 'react-bootstrap/Modal'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\n// import InputGroup from 'react-bootstrap/InputGroup'\n//\nimport './modalForm.css'\nimport close_btn from './pages/Overview/images/close_btn.png'\n//\nimport { useGlobalContext } from './context'\n\nexport const Modal = () => {\n  const {\n    isModalOpen,\n    closeModal,\n    //\n    owner,\n    handleChange,\n    //\n\n    // fullName,\n    // addFullName,\n    addOwner,\n    // addEndDate,\n    // endDate,\n    // profits,\n    // losses,\n    // phone,\n    // addProfits,\n    // addLosses,\n    // addPhone,\n    //\n    switchTrigger,\n    handlePageAfterAdd,\n  } = useGlobalContext()\n\n  const [validated, setValidated] = useState(false)\n\n  const handleSubmit = (event) => {\n    // const form = event.currentTarget\n    // if (form.checkValidity() === false) {\n    //   event.preventDefault()\n    //   event.stopPropagation()\n    // }\n\n    // setValidated(true)\n\n    // рефакторинг для манипулирования несколькими инпутами\n    // const newOwner = {\n    //   id: new Date().getTime().toString(),\n    //   fullName,\n    //   endDate,\n    //   profits,\n    //   losses,\n    //   phone,\n    // }\n\n    addOwner(owner)\n    //\n\n    // setFullName('')\n    // // setEndDate('')\n    // // setProfits('')\n    // // setLosses('')\n    // // setPhone('')\n    // // setModalShow(false)\n    // handlePageAfterAdd()\n  }\n\n  switchTrigger()\n\n  // validation schema\n  const schema = Yup.object().shape({\n    fullName: Yup.number().typeError('Должно быть числом').required('Error!'),\n    // endDate: yup.string().required(),\n    // profits: yup.string().required(),\n    // losses: yup.string().required(),\n    // phone: yup.string().required(),\n  })\n\n  return (\n    <div\n      className={`${\n        isModalOpen ? 'modal-overlay show-modal' : 'modal-overlay'\n      }`}\n    >\n      <div className={'modal-container '}>\n        <button type='button' className='close_btn' onClick={closeModal}>\n          <img src={close_btn} alt='close button' />\n        </button>\n\n        <Formik\n          validationSchema={schema}\n          // onSubmit={(e) => handleSubmit(e)}\n          onSubmit={console.log('ratatatata')}\n          // onChange={(e) => handleChange(e)}\n          initialValues={{\n            fullName: '',\n            // endDate: '',\n            // profits: '',\n            // losses: '',\n            // phone: '',\n          }}\n          validateOnBlur\n        >\n          {({\n            // handleSubmit,\n            // handleChange,\n            handleBlur,\n            // values,\n            touched,\n            // isValid,\n            errors,\n          }) => (\n            <Form\n              //\n              // делает кнопку неактивной\n              noValidate\n              validated={validated}\n              onSubmit={handleSubmit}\n            >\n              <Form.Row>\n                <Form.Group as={Col} md='10' controlId='validationCustom01'>\n                  <Form.Label>Full name</Form.Label>\n                  <Form.Control\n                    // required\n                    type='text'\n                    name='fullName'\n                    value={owner.fullName}\n                    placeholder='Name Surname'\n                    // onChange={(e) => addFullName(e)}\n                    // onChange={handleChange}\n                    onChange={(e) => handleChange(e)}\n                    // onBlur={handleBlur}\n                    isValid={touched.fullName && !errors.fullName}\n\n                    // onBlur={handleBlur}\n                  />\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                </Form.Group>\n                {/* <Form.Group as={Col} md='6' controlId='validationCustom02'>\n                  <Form.Label>End date</Form.Label>\n                  <Form.Control\n                    required\n                    type='text'\n                    name='endDate'\n                    value={owner.endDate}\n                    placeholder='dd/mm/yy'\n                    // onChange={(e) => addEndDate(e)}\n                    onChange={(e) => handleChange(e)}\n                  />\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                </Form.Group> */}\n              </Form.Row>\n              {/* <Form.Row>\n                <Form.Group as={Col} md='6' controlId='validationCustom03'>\n                  <Form.Label>Profits</Form.Label>\n                  <Form.Control\n                    required\n                    type='text'\n                    name='profits'\n                    value={owner.profits}\n                    placeholder='999.00'\n                    // onChange={(e) => addProfits(e)}\n                    onChange={(e) => handleChange(e)}\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    Please provide a valid profits sum.\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} md='6' controlId='validationCustom04'>\n                  <Form.Label>Losses</Form.Label>\n                  <Form.Control\n                    required\n                    type='text'\n                    name='losses'\n                    value={owner.losses}\n                    placeholder='999.00'\n                    // onChange={(e) => addLosses(e)}\n                    onChange={(e) => handleChange(e)}\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    Please provide a valid losses sum.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col} md='6' controlId='validationCustom05'>\n                  <Form.Label>Phone</Form.Label>\n                  <Form.Control\n                    required\n                    type='text'\n                    name='phone'\n                    value={owner.phone}\n                    placeholder='+7 xxx xxx xx xx'\n                    // onChange={(e) => addPhone(e)}\n                    onChange={(e) => handleChange(e)}\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    Please provide phone number.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Form.Row> */}\n              {/* {touched.name && errors.name && <p> {errors.name}</p>} */}\n              <Button type='submit'>Submit form</Button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  )\n}\n","/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/context.jsx",[],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/Sidebar/sidebarData.js",[],"/home/sergey/react-projects/ownersList-react-app/owners-app/owners-react-app/src/components/pages/Overview/utils.jsx",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"107","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":11},{"ruleId":"103","severity":1,"message":"108","line":23,"column":21,"nodeType":"105","messageId":"106","endLine":23,"endColumn":33},{"ruleId":"109","severity":1,"message":"110","line":29,"column":6,"nodeType":"111","endLine":29,"endColumn":20,"suggestions":"112"},{"ruleId":"103","severity":1,"message":"113","line":68,"column":5,"nodeType":"105","messageId":"106","endLine":68,"endColumn":15},{"ruleId":"103","severity":1,"message":"114","line":98,"column":11,"nodeType":"105","messageId":"106","endLine":98,"endColumn":22},{"ruleId":"99","replacedBy":"115"},{"ruleId":"101","replacedBy":"116"},{"ruleId":"103","severity":1,"message":"117","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":18},{"ruleId":"103","severity":1,"message":"118","line":38,"column":5,"nodeType":"105","messageId":"106","endLine":38,"endColumn":23},{"ruleId":"103","severity":1,"message":"119","line":41,"column":21,"nodeType":"105","messageId":"106","endLine":41,"endColumn":33},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'setModalShow' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allOwners', 'handlePageAfterAdd', and 'mergeOwners'. Either include them or remove the dependency array.","ArrayExpression",["122"],"'handlePage' is assigned a value but never used.","'currentPage' is assigned a value but never used.",["120"],["121"],"'InputGroup' is defined but never used.","'handlePageAfterAdd' is assigned a value but never used.","'setValidated' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [allOwners, handlePageAfterAdd, listOfOwners, mergeOwners]",{"range":"125","text":"126"},[765,779],"[allOwners, handlePageAfterAdd, listOfOwners, mergeOwners]"]